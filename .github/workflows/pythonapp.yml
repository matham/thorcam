name: Python application

on: [push, pull_request]

jobs:
  lint_test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip virtualenv wheel setuptools
      - name: Lint with pycodestyle
        run: |
          python3 -m pip install flake8
          python3 -m flake8 . --count --ignore=E125,E126,E127,E128,E402,E741,E731,W503,F401,W504 --show-source --statistics --max-line-length=80 --exclude=__pycache__,.tox,.git/,doc/

  windows_wheels_tests:
    runs-on: windows-latest
    strategy:
      matrix:
        python: [ '3.6', '3.7' ]
        arch: ['x64', 'x86']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - name: Get dependencies
      run: |
        Invoke-WebRequest "https://www.thorlabs.com/software/THO/ThorCam/Programming/Scientific_Camera_Interfaces_07-11-2019.zip" -OutFile "Scientific_Camera_Interfaces_07-11-2019.zip"
        7z x "Scientific_Camera_Interfaces_07-11-2019.zip"
    - name: Install
      run: |
        python -m pip install --upgrade pip virtualenv wheel setuptools pytest
        python -m pip install -e .
    - name: Make wheel
      run: |
        if ("${{ matrix.arch }}" -eq "x64") {
          $env:THORCAM_WHEEL_DEPS = ".\Scientific Camera Interfaces\SDK\DotNet Toolkit\dlls\Managed_64_lib"
        } else {
          $env:THORCAM_WHEEL_DEPS = ".\Scientific Camera Interfaces\SDK\DotNet Toolkit\dlls\Managed_32_lib"
        }
        echo "THORCAM_WHEEL_DEPS=$env:THORCAM_WHEEL_DEPS"

        python setup.py bdist_wheel
    - name: Upload wheel
      uses: actions/upload-artifact@master
      with:
        name: py_wheel
        path: dist
    - name: Test with pytest
      if: matrix.arch == 'x64'
      run: |
        if ("${{ matrix.arch }}" -eq "x64") {
          $env:THORCAM_NET_BIN_PATH = ".\Scientific Camera Interfaces\SDK\DotNet Toolkit\dlls\Managed_64_lib"
        } else {
          $env:THORCAM_NET_BIN_PATH = ".\Scientific Camera Interfaces\SDK\DotNet Toolkit\dlls\Managed_32_lib"
        }
        echo "THORCAM_NET_BIN_PATH=$env:THORCAM_NET_BIN_PATH"

        python -m pytest thorcam/tests

  docs:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install
      run: |
        python -m pip install --upgrade pip virtualenv wheel setuptools sphinx sphinx_rtd_theme
        python -m pip install -e .
    - name: Generate docs
      run: |
        cd doc
        ./make.bat html
    - name: gh-pages upload
      if: github.event_name == 'push' && github.ref == 'refs/heads/test'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cp -r doc/build/html ~/docs_temp

        git checkout --progress --force --orphan gh-pages
        git rm -rf .
        Remove-Item -recurse * -exclude .git
        cp -r ~/docs_temp/* .
        echo "" > .nojekyll

        $env:GIT_TRACE=1
        echo "Configuring git"
        echo "Configured git"

        git add .
        git commit -a -m "Docs for git-$env:GITHUB_SHA"
        git push origin gh-pages -f
